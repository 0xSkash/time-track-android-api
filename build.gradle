apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

buildscript {
    ext.kotlin_version = '1.7.0'

    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

android {
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 28
        targetSdkVersion 33
        versionCode 1
        versionName getVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }
}


buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
    google()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def getVersionName = { ->
    return "0.5.4"
}

def getArtificatId = { ->
    return "time-track-openapi-client"
}

tasks.register('sourceJar', Jar) {
    from android.sourceSets.main.java.srcDirs, android.sourceSets.release.java.srcDirs
    archiveClassifier = "sources"
}

afterEvaluate {
    publishing {
        publishing {
            publications {
                releaseAndroidLibrary(MavenPublication) {
                    from components.release
                    groupId 'com.skash.timetrack.api' // Replace with group ID
                    artifactId getArtificatId()
                    version getVersionName()

                }
            }

            repositories {
                maven {
                    name = "GitHubPackages"
                    url = uri("https://maven.pkg.github.com/0xSkash/time-track-android-api")
                    credentials {
                        username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                        password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
                    }
                }
            }
        }
    }
}

ext {
    oltu_version = '1.0.2'
    retrofit_version = '2.9.0'
    swagger_annotations_version = '1.6.6'
    junit_version = "4.13.2"
    rx_java_version = '3.1.5'
    json_fire_version = '1.8.5'
    jakarta_annotation_version = "2.1.1"
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.10.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.github.akarnokd:rxjava3-retrofit-adapter:3.0.0'
    implementation "io.reactivex.rxjava3:rxjava:$rx_java_version"
    implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation 'org.openapitools:jackson-databind-nullable:0.2.3'
    implementation("org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:$oltu_version") {
        exclude group: 'org.apache.oltu.oauth2', module: 'org.apache.oltu.oauth2.common'
    }
    implementation("com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.3")
    implementation "io.gsonfire:gson-fire:$json_fire_version"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation "jakarta.annotation:jakarta.annotation-api:2.1.1"
    testImplementation "junit:junit:$junit_version"
}
